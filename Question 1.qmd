# Question 1 (Exploratory Data Analysis)

```{r}
data <- read.table("STA4026_Assignment_Clustering.txt")
```

## a)

```{r}
data1 <- as.data.frame(data)

# Remove missing values and replace them with 0
data1 <- na.omit(data1)
data1[is.na(data1)] <- 0

# Remove duplicates
data1 <- data1[!duplicated(data1), ]

# Results
paste0("No. of observations before cleaning: ", length(data1))

# Descriptive Statistics
desc_stats <- function(data){
  return(data.frame(
  Min = apply(data, 2, min), 
  Q1 =  apply(data1, 2, quantile, probs = c(0.25)), 
  Med = apply(data, 2, median),   
  Mean = apply(data, 2, mean),
  Q3 =  apply(data1, 2, quantile, probs = c(0.75)),
  Max = apply(data, 2, max) 
  ))
}
desc_stats <- desc_stats(data1)
head(desc_stats)
```

## c)

```{r}
#| warning: false
panel.hist <- function(x, ...) {
  usr <- par("usr"); on.exit(par(usr))
  par(usr = c(usr[1:2], 0, 1.5))
  h <- hist(x, plot = FALSE)
  breaks <- h$breaks; nB <- length(breaks)
  y <- h$counts / max(h$counts)
  rect(breaks[-nB], 0, breaks[-1], y, col = "gray", border = NA)
}
# png("Plots/Question 1c Pair Plot.png", width = 1000, height = 1000, res = 150)
transparent_black <- rgb(0, 0, 0, alpha = 0.3)
pairs(data1, 
      main = "Bivariate Distributions of Data",  
      pch = 19, col = transparent_black,                  
      cex = 0.8, gap = 0.5,
      diag.panel = panel.hist)                    
# dev.off()
```

## d)

```{r}
#| warning: false
library(ggplot2)

dist_mat <- as.data.frame(dist(data1, method = "euclidean"))
head(dist_mat)
ph3 <- ggplot(dist_mat, aes(x=x)) +
  geom_histogram(fill = "purple", color = "black", alpha = 0.7) +
  labs(title = "Distribution of Pairwise Euclidean Distances", x = "Euclidean Distances", y = "Frequency")+
  theme_minimal() +
  theme(
    plot.title = element_text(size = 17.5, face = "bold"),  
    axis.title.x = element_text(size = 14),               
    axis.title.y = element_text(size = 14),               
    axis.text = element_text(size = 10),                  
    plot.margin = margin(0.5, 0.5, 0.5, 0.5, "cm"),     
    panel.grid.minor = element_blank()                    
  )
ph3

# ggsave(ph3, filename = "Plots/Question 1d Distribution of Pairwise Euclidean Distances.png")
# save(dist_mat, file = "R Data/Distance Matrix.RData" )
```

## e)

```{r}
library(knitr)
# Boxplot
boxplot(list(X1 = data1$V1, X2 = data1$V2),
        main = "Boxplots of X1 and X2")

# Inter Quantile Range Method
iqr_outliers <- function(v) {
  Q1 <- quantile(v, 0.25)
  Q3 <- quantile(v, 0.75)
  IQR_val <- IQR(v)
  which(v < (Q1 - 1.5 * IQR_val) | v > (Q3 + 1.5 * IQR_val))
}
iqr_outliers(data1$V1) 
iqr_outliers(data1$V2) 

# Z Score Method
z_x1 <- scale(data1$V1)
z_x2 <- scale(data1$V2)
which(abs(z_x1) > 3)
which(abs(z_x2) > 3)

# Mahalanobis Distance
md <- mahalanobis(data1, colMeans(data1), cov(data1))
outliers1 <- which(md > qchisq(0.975, df = 2 ))
outliers_df <- data.frame(Index = outliers1, V1 = data1$V1[outliers1], V2 = data1$V2[outliers1])
kable(outliers_df, caption = "Outliers Mahalanobis")

# Euclidean Distance
centroid <- colMeans(data1)
euclidean_dist <- apply(data1, 1, function(row) sqrt(sum((row - centroid)^2)))
threshold <- quantile(euclidean_dist, 0.98)
outliers2 <- which(euclidean_dist > threshold)
outliers_df <- data.frame(Index = outliers2, V1 = data1$V1[outliers2], V2 = data1$V2[outliers2])
kable(outliers_df, caption = "Outliers Euclidean")

# Results
intersecting_outliers <- intersect(outliers1, outliers2)
data2 <- data1[-union(outliers1, outliers2), ]
paste0("No. of outliers removed: ", length(union(outliers1, outliers2)))
```

## f)

```{r}
cor(data1)
```
